parameters:
    excludes_analyse:
        - %rootDir%/../../../tests/*
        - %rootDir%/../../../vendor/*
    ignoreErrors:
        - '#Casting to .+ something that.s already .+\.#'
        # Method will exit if $method isn't defined (via a $found boolean in a loop)
        - '#Variable \$method might not be defined\.#'
        # There are method_exists checks before these are called
        - '#Call to an undefined method object::toJson\(\)\.#'
        - '#Call to an undefined method object::toArray\(\)\.#'
        # I think most of these null checks are unnecessary, but the return types may need null added if the property is never initialized
        - '#Strict comparison using === between null and Zend_Json_Server_Request will always evaluate to false\.#'
        - '#Strict comparison using === between null and Zend_Json_Server_Response will always evaluate to false\.#'
        - '#Strict comparison using !== between null and string will always evaluate to true\.#'
        - '#Strict comparison using === between null and string will always evaluate to false\.#'
